@charset "UTF-8";
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* 定义需要用到的一些变量 */
.item, .btn-default,
.btn-link {
  -webkit-transition: all .2s ease;
  transition: all .2s ease; }

.wrapper {
  padding: 2em; }

header {
  padding: 4em; }

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }
  *::after, *::before {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }

html {
  width: 100%;
  height: 100%; }

body {
  font: 16px/1.6 "Noto Sans SC", "Helvetica Neue", -apple-system, "Hiragino Sans GB", "PingFang SC", "Microsoft YaHei", "Heiti SC", sans-serif;
  color: #1a1a1a;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: auto;
  background-color: #ffffff; }

h1,
h2,
h3,
h4,
h5,
h6,
h5,
h6 {
  font-family: "Noto Sans SC", "Helvetica Neue", -apple-system, "Hiragino Sans GB", "PingFang SC", "Microsoft YaHei", "Heiti SC", sans-serif; }

h1 {
  font-size: 200%;
  margin: 0.5em 0; }

h2 {
  font-size: 120%;
  margin: 1em 0 0.5em;
  color: #fa0; }

h3 {
  font-size: 100%;
  margin: 1.5em 0 0.5em;
  color: #faf; }


h4,
h5,
h6 {
  font-size: 80%;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 3px;
  margin: 4em 0 0.5em;
  color: gray; }

h5 {
  text-align: center; }

h6 {
  text-align: right; }

p {
  margin: 1.3em 0;
  line-height: 1.6; }

small {
  font-size: 60%; }

ul li {
  list-style-type: disc; }

ol li {
  list-style-type: decimal; }

ul {
  padding-left: 1em;
  margin-bottom: 2em; }

li {
  margin-bottom: 1em; }

button {
  outline: none; }

a {
  color: #fa0;
  text-decoration: none;
  outline: none;
  display: initial; }
  a:hover {
    opacity: 0.9; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #aaaaaa;
  margin: 1em 0;
  padding: 0; }

fieldset {
  border: 0;
  padding: 0;
  margin: 0; }

.container {
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
  position: relative; }
  .container .content-container {
    width: 90%;
    max-width: 460px;
    margin: 0 auto; }

.wrapper {
  max-width: 960px;
  margin: 0 auto; }

.item {
  padding: 1em 0;
  width: 100%; }

/* column-3 */
@media only screen and (min-width: 481px) {
  .column-3 .item {
    float: left;
    width: 33.33%; } }

.column-3:after {
  content: "";
  display: table;
  clear: both; }

.tips {
  font-size: 0.9em; }
  .tips p {
    line-height: 1.4; }

.white {
  color: white; }

.btn {
  color: white;
  font-weight: 900;
  cursor: pointer;
  display: inline-block;
  margin-bottom: 1em;
  text-align: center; }
  .btn a {
    color: white; }

.btn-default,
.btn-link {
  font-size: 1.1em;
  background: #fa0;
  padding: 0.5em 1.5em;
  border: 0;
  min-width: 140px; }
  .btn-default:hover,
  .btn-link:hover {
    opacity: 0.9; }
  @media only screen and (min-width: 481px) {
    .btn-default,
    .btn-link {
      font-size: 140%; } }
  .btn-default.btn-next,
  .btn-link.btn-next {
    position: relative;
    padding-right: 2em; }
    .btn-default.btn-next:after,
    .btn-link.btn-next:after {
      content: "";
      width: 22px;
      height: 22px;
      background: url("../../../images/next-white.svg") no-repeat 0 0;
      position: absolute;
      background-size: cover;
      top: 50%;
      margin-top: -11px;
      right: 0.8em; }

.btn-default {
  background: #fa0; }

.btn-link {
  background: #faf; }

.align-left {
  text-align: left; }

.center-cropped {
  height: 400px;
  width: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  overflow: hidden; }
  @media only screen and (min-width: 1025px) {
    .center-cropped {
      height: 100%;
      background-position: left top; } }

/* Set the image to fill its parent and make transparent */
.center-cropped img {
  min-height: 100%;
  /* IE 8 */
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  /* IE 5-7 */
  filter: alpha(opacity=0);
  /* modern browsers */
  opacity: 0; }

/* Slide */
/* Hide the images by default */
.myslides-content {
  display: none; }

.carousel-indicator {
  position: absolute;
  bottom: 2em;
  left: 0px;
  width: 100%;
  user-drag: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }
  .carousel-indicator .prev,
  .carousel-indicator .next,
  .carousel-indicator .dot {
    cursor: pointer; }
  .carousel-indicator .prev,
  .carousel-indicator .next {
    opacity: 0.6;
    -webkit-transition: 0.2s ease;
    transition: 0.2s ease;
    width: 24px;
    height: 24px;
    position: relative;
    display: inline-block;
    padding: 0 10px; }
    .carousel-indicator .prev img,
    .carousel-indicator .next img {
      width: 20px;
      position: absolute;
      left: 2px;
      top: 2px; }
  .carousel-indicator .prev img {
    -webkit-transform: rotate(180deg);
            transform: rotate(180deg); }
  .carousel-indicator .prev:hover,
  .carousel-indicator .next:hover {
    opacity: 1; }
  .carousel-indicator .dot {
    height: 7px;
    width: 7px;
    margin: 8px 10px;
    background-color: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    display: inline-block;
    -webkit-transition: background-color 0.6s ease;
    transition: background-color 0.6s ease; }
  .carousel-indicator .active,
  .carousel-indicator .dot:hover {
    background-color: white; }

/* Fading animation */
.fade {
  -webkit-animation-name: fade;
  -webkit-animation-duration: 2s;
  -webkit-animation-timing-function: ease;
  animation-name: fade;
  animation-timing-function: ease;
  animation-duration: 2s; }

@-webkit-keyframes fade {
  from {
    opacity: .4; }
  to {
    opacity: 1; } }

@keyframes fade {
  from {
    opacity: .4; }
  to {
    opacity: 1; } }

/* special state */
.error,
.error-msg {
  color: #d50000; }

.warning,
.notice {
  color: #ffd600; }

/* mobile/desktop only */
.mobileonly {
  display: block; }

.actions .mobileonly {
  display: inline-block; }

@media only screen and (min-width: 1025px) {
  .desktoponly {
    display: block; }
  .mobileonly,
  .actions .mobileonly {
    display: none; }
  .actions .desktoponly {
    display: inline-block; } }

@font-face {
  font-family: 'icomoon';
  src: url("../assets/fonts/icomoon.eot");
  src: url("../assets/fonts/icomoon.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/icomoon.woff") format("woff"), url("../assets/fonts/icomoon.ttf") format("truetype"), url("../assets/fonts/icomoon.svg#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon-twitter, .icon-github, .icon-dribbble, .icon-instagram {
  font-family: 'icomoon';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased; }

.icon-twitter:before {
  content: "\e002"; }

.icon-github:before {
  content: "\e003"; }

.icon-dribbble:before {
  content: "\e004"; }

.icon-instagram:before {
  content: "\e005"; }

footer {
  width: 100%;
  bottom: 0;
  left: 0;
  text-align: center; }
  @media only screen and (min-width: 1025px) {
    footer {
      padding: 1em 5em;
      margin-top: 0px; } }
  footer small {
    text-transform: uppercase; }
  footer img {
    width: 100%;
    max-width: 1280px;
    margin: 0 auto; }
    footer img.mobileonly {
      max-width: 480px;
      width: 90%; }

header {
  padding-top: 2em;
  width: 100%;
  background: white; }
  @media only screen and (min-width: 481px) and (max-width: 1024px) {
    header {
      padding-left: 5em;
      padding-right: 5em; } }
  @media only screen and (min-width: 1025px) {
    header {
      padding-left: 5em;
      padding-right: 5em; } }

.light-header {
  background-color: #f3f3f3;
  padding-bottom: 2em;
  height: 120px; }

.center-logo .container {
  position: relative;
  text-align: center; }
  @media only screen and (min-width: 1025px) {
    .center-logo .container {
      text-align: left; } }

.center-logo .logo {
  margin: 0px;
  display: inline-block; }
  .center-logo .logo a {
    display: block; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
